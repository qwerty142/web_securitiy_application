/*
 * This file is generated by jOOQ.
 */
package org.example.repositories.jooqGenEntities.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Owner implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long ownerId;
    private LocalDateTime birthDate;

    public Owner() {}

    public Owner(Owner value) {
        this.ownerId = value.ownerId;
        this.birthDate = value.birthDate;
    }

    @ConstructorProperties({ "ownerId", "birthDate" })
    public Owner(
        @Nullable Long ownerId,
        @Nullable LocalDateTime birthDate
    ) {
        this.ownerId = ownerId;
        this.birthDate = birthDate;
    }

    /**
     * Getter for <code>public.owner.owner_id</code>.
     */
    @Nullable
    public Long getOwnerId() {
        return this.ownerId;
    }

    /**
     * Setter for <code>public.owner.owner_id</code>.
     */
    public void setOwnerId(@Nullable Long ownerId) {
        this.ownerId = ownerId;
    }

    /**
     * Getter for <code>public.owner.birth_date</code>.
     */
    @Nullable
    public LocalDateTime getBirthDate() {
        return this.birthDate;
    }

    /**
     * Setter for <code>public.owner.birth_date</code>.
     */
    public void setBirthDate(@Nullable LocalDateTime birthDate) {
        this.birthDate = birthDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Owner other = (Owner) obj;
        if (this.ownerId == null) {
            if (other.ownerId != null)
                return false;
        }
        else if (!this.ownerId.equals(other.ownerId))
            return false;
        if (this.birthDate == null) {
            if (other.birthDate != null)
                return false;
        }
        else if (!this.birthDate.equals(other.birthDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.ownerId == null) ? 0 : this.ownerId.hashCode());
        result = prime * result + ((this.birthDate == null) ? 0 : this.birthDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Owner (");

        sb.append(ownerId);
        sb.append(", ").append(birthDate);

        sb.append(")");
        return sb.toString();
    }
}
