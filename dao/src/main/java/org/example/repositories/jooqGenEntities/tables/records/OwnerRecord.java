/*
 * This file is generated by jOOQ.
 */
package org.example.repositories.jooqGenEntities.tables.records;


import java.beans.ConstructorProperties;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.example.repositories.jooqGenEntities.tables.Owner;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OwnerRecord extends UpdatableRecordImpl<OwnerRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.owner.owner_id</code>.
     */
    public void setOwnerId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.owner.owner_id</code>.
     */
    @Nullable
    public Long getOwnerId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.owner.birth_date</code>.
     */
    public void setBirthDate(@Nullable LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.owner.birth_date</code>.
     */
    @Nullable
    public LocalDateTime getBirthDate() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OwnerRecord
     */
    public OwnerRecord() {
        super(Owner.OWNER);
    }

    /**
     * Create a detached, initialised OwnerRecord
     */
    @ConstructorProperties({ "ownerId", "birthDate" })
    public OwnerRecord(@Nullable Long ownerId, @Nullable LocalDateTime birthDate) {
        super(Owner.OWNER);

        setOwnerId(ownerId);
        setBirthDate(birthDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OwnerRecord
     */
    public OwnerRecord(org.example.repositories.jooqGenEntities.tables.pojos.Owner value) {
        super(Owner.OWNER);

        if (value != null) {
            setOwnerId(value.getOwnerId());
            setBirthDate(value.getBirthDate());
            resetChangedOnNotNull();
        }
    }
}
