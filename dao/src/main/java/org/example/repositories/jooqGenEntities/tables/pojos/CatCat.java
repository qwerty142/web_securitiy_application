/*
 * This file is generated by jOOQ.
 */
package org.example.repositories.jooqGenEntities.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CatCat implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long cat1Id;
    private Long cat2Id;

    public CatCat() {}

    public CatCat(CatCat value) {
        this.cat1Id = value.cat1Id;
        this.cat2Id = value.cat2Id;
    }

    @ConstructorProperties({ "cat1Id", "cat2Id" })
    public CatCat(
        @NotNull Long cat1Id,
        @NotNull Long cat2Id
    ) {
        this.cat1Id = cat1Id;
        this.cat2Id = cat2Id;
    }

    /**
     * Getter for <code>public.cat_cat.cat1_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getCat1Id() {
        return this.cat1Id;
    }

    /**
     * Setter for <code>public.cat_cat.cat1_id</code>.
     */
    public void setCat1Id(@NotNull Long cat1Id) {
        this.cat1Id = cat1Id;
    }

    /**
     * Getter for <code>public.cat_cat.cat2_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getCat2Id() {
        return this.cat2Id;
    }

    /**
     * Setter for <code>public.cat_cat.cat2_id</code>.
     */
    public void setCat2Id(@NotNull Long cat2Id) {
        this.cat2Id = cat2Id;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CatCat other = (CatCat) obj;
        if (this.cat1Id == null) {
            if (other.cat1Id != null)
                return false;
        }
        else if (!this.cat1Id.equals(other.cat1Id))
            return false;
        if (this.cat2Id == null) {
            if (other.cat2Id != null)
                return false;
        }
        else if (!this.cat2Id.equals(other.cat2Id))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.cat1Id == null) ? 0 : this.cat1Id.hashCode());
        result = prime * result + ((this.cat2Id == null) ? 0 : this.cat2Id.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CatCat (");

        sb.append(cat1Id);
        sb.append(", ").append(cat2Id);

        sb.append(")");
        return sb.toString();
    }
}
